<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="cn.sumpay.accountant.dao.CasBankBalanceCheckMapper">
	<resultMap id="BaseResultMap"
		type="cn.sumpay.accountant.model.CasBankBalanceCheck">
		<result column="ID" property="id" jdbcType="VARCHAR" />
		<result column="BALANCE_DATE" property="balanceDate" jdbcType="VARCHAR" />
		<result column="PRE_BALANCE" property="preBalance" jdbcType="DECIMAL" />
		<result column="DAY_DEBTOR_AMOUNT" property="dayDebtorAmount"
			jdbcType="DECIMAL" />
		<result column="DAY_CREDITOR_AMOUNT" property="dayCreditorAmount"
			jdbcType="DECIMAL" />
		<result column="DAY_CERTIFICATE" property="dayCertificate"
			jdbcType="DECIMAL" />
		<result column="END_BALANCE" property="endBalance" jdbcType="DECIMAL" />
		<result column="BANK_BALANCE" property="bankBalance" jdbcType="DECIMAL" />
		<result column="DIFF_AMOUNT" property="diffAmount" jdbcType="DECIMAL" />
		<result column="CHECK_ACCOUNT_STATUS" property="checkAccountStatus"
			jdbcType="VARCHAR" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
		<result column="MODIFY_USER_ID" property="modifyUserId"
			jdbcType="VARCHAR" />
		<result column="BANK_ID" property="bankId" jdbcType="VARCHAR" />
	</resultMap>
	<select id="getSequenceNO"  resultType="java.lang.String">
      select BANK_BALANCE_CHECK_sequence.nextval from dual
  	</select>
	<!-- <select id="selectCasBankBalanceCheckList"
		parameterType="cn.sumpay.inner.clearingsettle.clearing.bo.CasBankBalanceCheckVO"
		resultMap="BaseResultMap">
		select *
		from (select rownum rn, temp.*
		from (select *
		from CAS_BANK_BALANCE_CHECK t1
		<include refid="querySql"></include>
		order by MODIFY_TIME desc ) temp
		where rownum <![CDATA[<=]]>
		#{page}*#{rows})
		where rn <![CDATA[>]]>
		(#{page}-1)*#{rows}
	</select> -->
	<sql id="querySql">
		<where>
			<if test="bankId!=null and bankId!=''">
			 and t1.BANK_ID=#{bankId}
			</if>
			<if test="startDate != null and startDate !=''">
				and t1.BALANCE_DATE <![CDATA[>=]]>
				#{startDate}
			</if>
			<if test="endDate != null and endDate !=''">
				and t1.BALANCE_DATE <![CDATA[<=]]>
				#{endDate}
			</if>
		</where>
	</sql>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, BALANCE_DATE, PRE_BALANCE, DAY_DEBTOR_AMOUNT, DAY_CREDITOR_AMOUNT,
		DAY_CERTIFICATE,
		END_BALANCE, BANK_BALANCE, DIFF_AMOUNT, CHECK_ACCOUNT_STATUS, MODIFY_TIME,
		MODIFY_USER_ID,
		BANK_ID
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="cn.sumpay.accountant.model.CasBankBalanceCheckExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from CAS_BANK_BALANCE_CHECK
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample"
		parameterType="cn.sumpay.accountant.model.CasBankBalanceCheckExample">
		delete from CAS_BANK_BALANCE_CHECK
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="cn.sumpay.accountant.model.CasBankBalanceCheck">
		insert into CAS_BANK_BALANCE_CHECK (ID, BALANCE_DATE, PRE_BALANCE,
		DAY_DEBTOR_AMOUNT, DAY_CREDITOR_AMOUNT, DAY_CERTIFICATE,
		END_BALANCE, BANK_BALANCE, DIFF_AMOUNT,
		CHECK_ACCOUNT_STATUS, MODIFY_TIME, MODIFY_USER_ID,
		BANK_ID)
		values (#{id,jdbcType=VARCHAR}, #{balanceDate,jdbcType=VARCHAR},
		#{preBalance,jdbcType=DECIMAL},
		#{dayDebtorAmount,jdbcType=DECIMAL}, #{dayCreditorAmount,jdbcType=DECIMAL},
		#{dayCertificate,jdbcType=DECIMAL},
		#{endBalance,jdbcType=DECIMAL}, #{bankBalance,jdbcType=DECIMAL}, #{diffAmount,jdbcType=DECIMAL},
		#{checkAccountStatus,jdbcType=VARCHAR},
		#{modifyTime,jdbcType=VARCHAR}, #{modifyUserId,jdbcType=VARCHAR},
		#{bankId,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.sumpay.accountant.model.CasBankBalanceCheck">
		insert into CAS_BANK_BALANCE_CHECK
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="balanceDate != null">
				BALANCE_DATE,
			</if>
			<if test="preBalance != null">
				PRE_BALANCE,
			</if>
			<if test="dayDebtorAmount != null">
				DAY_DEBTOR_AMOUNT,
			</if>
			<if test="dayCreditorAmount != null">
				DAY_CREDITOR_AMOUNT,
			</if>
			<if test="dayCertificate != null">
				DAY_CERTIFICATE,
			</if>
			<if test="endBalance != null">
				END_BALANCE,
			</if>
			<if test="bankBalance != null">
				BANK_BALANCE,
			</if>
			<if test="diffAmount != null">
				DIFF_AMOUNT,
			</if>
			<if test="checkAccountStatus != null">
				CHECK_ACCOUNT_STATUS,
			</if>
			<if test="modifyTime != null">
				MODIFY_TIME,
			</if>
			<if test="modifyUserId != null">
				MODIFY_USER_ID,
			</if>
			<if test="bankId != null">
				BANK_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="balanceDate != null">
				#{balanceDate,jdbcType=VARCHAR},
			</if>
			<if test="preBalance != null">
				#{preBalance,jdbcType=DECIMAL},
			</if>
			<if test="dayDebtorAmount != null">
				#{dayDebtorAmount,jdbcType=DECIMAL},
			</if>
			<if test="dayCreditorAmount != null">
				#{dayCreditorAmount,jdbcType=DECIMAL},
			</if>
			<if test="dayCertificate != null">
				#{dayCertificate,jdbcType=DECIMAL},
			</if>
			<if test="endBalance != null">
				#{endBalance,jdbcType=DECIMAL},
			</if>
			<if test="bankBalance != null">
				#{bankBalance,jdbcType=DECIMAL},
			</if>
			<if test="diffAmount != null">
				#{diffAmount,jdbcType=DECIMAL},
			</if>
			<if test="checkAccountStatus != null">
				#{checkAccountStatus,jdbcType=VARCHAR},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=VARCHAR},
			</if>
			<if test="modifyUserId != null">
				#{modifyUserId,jdbcType=VARCHAR},
			</if>
			<if test="bankId != null">
				#{bankId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.sumpay.accountant.model.CasBankBalanceCheckExample"
		resultType="java.lang.Integer">
		select count(*) from CAS_BANK_BALANCE_CHECK
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update CAS_BANK_BALANCE_CHECK
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.balanceDate != null">
				BALANCE_DATE = #{record.balanceDate,jdbcType=VARCHAR},
			</if>
			<if test="record.preBalance != null">
				PRE_BALANCE = #{record.preBalance,jdbcType=DECIMAL},
			</if>
			<if test="record.dayDebtorAmount != null">
				DAY_DEBTOR_AMOUNT = #{record.dayDebtorAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.dayCreditorAmount != null">
				DAY_CREDITOR_AMOUNT = #{record.dayCreditorAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.dayCertificate != null">
				DAY_CERTIFICATE = #{record.dayCertificate,jdbcType=DECIMAL},
			</if>
			<if test="record.endBalance != null">
				END_BALANCE = #{record.endBalance,jdbcType=DECIMAL},
			</if>
			<if test="record.bankBalance != null">
				BANK_BALANCE = #{record.bankBalance,jdbcType=DECIMAL},
			</if>
			<if test="record.diffAmount != null">
				DIFF_AMOUNT = #{record.diffAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.checkAccountStatus != null">
				CHECK_ACCOUNT_STATUS = #{record.checkAccountStatus,jdbcType=VARCHAR},
			</if>
			<if test="record.modifyTime != null">
				MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
			</if>
			<if test="record.modifyUserId != null">
				MODIFY_USER_ID = #{record.modifyUserId,jdbcType=VARCHAR},
			</if>
			<if test="record.bankId != null">
				BANK_ID = #{record.bankId,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update CAS_BANK_BALANCE_CHECK
		set ID = #{record.id,jdbcType=VARCHAR},
		BALANCE_DATE = #{record.balanceDate,jdbcType=VARCHAR},
		PRE_BALANCE = #{record.preBalance,jdbcType=DECIMAL},
		DAY_DEBTOR_AMOUNT = #{record.dayDebtorAmount,jdbcType=DECIMAL},
		DAY_CREDITOR_AMOUNT = #{record.dayCreditorAmount,jdbcType=DECIMAL},
		DAY_CERTIFICATE = #{record.dayCertificate,jdbcType=DECIMAL},
		END_BALANCE = #{record.endBalance,jdbcType=DECIMAL},
		BANK_BALANCE = #{record.bankBalance,jdbcType=DECIMAL},
		DIFF_AMOUNT = #{record.diffAmount,jdbcType=DECIMAL},
		CHECK_ACCOUNT_STATUS = #{record.checkAccountStatus,jdbcType=VARCHAR},
		MODIFY_TIME = #{record.modifyTime,jdbcType=VARCHAR},
		MODIFY_USER_ID = #{record.modifyUserId,jdbcType=VARCHAR},
		BANK_ID = #{record.bankId,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
</mapper>